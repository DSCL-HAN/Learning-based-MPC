classdef dropout_torchmangle4509_Dropout < nnet.layer.Layer & nnet.layer.Formattable & ...
        nnet.layer.AutogeneratedFromPyTorch & nnet.layer.Acceleratable
    %dropout_torchmangle4509_Dropout Auto-generated custom layer
    % Auto-generated by MATLAB on 2025-02-08 17:52:05

    properties (Learnable)
        % Networks (type dlnetwork)

    end

    properties
        % Non-Trainable Parameters
        Constant_4
        Constant_3



    end

    properties (Learnable)
        % Trainable Parameters

    end

    methods
        function obj = dropout_torchmangle4509_Dropout(Name, Type, InputNames, OutputNames)
            obj.Name = Name;
            obj.Type = Type;
            obj.NumInputs = 1;
            obj.NumOutputs = 1;
            obj.InputNames = InputNames;
            obj.OutputNames = OutputNames;
        end

        function [dropout_input0_1] = predict(obj,dropout_input_1)

            %Use the input format inferred by the importer to permute the input into reverse-PyTorch dimension order
            [dropout_input_1, dropout_input_1_format] = mnasnet1_0.ops.permuteToReversePyTorch(dropout_input_1, '', 2);
            [dropout_input_1] = struct('value', dropout_input_1, 'rank', int64(2));

            [dropout_input0_1] = tracedPyTorchFunction(obj,dropout_input_1,false,"predict");


            %Permute U-labelled output to forward PyTorch dimension ordering
            if(any(dims(dropout_input0_1.value) == 'U'))
                dropout_input0_1 = permute(dropout_input0_1.value, fliplr(1:max(2,dropout_input0_1.rank)));
            end

        end



        function [dropout_input0_1] = forward(obj,dropout_input_1)

            %Use the input format inferred by the importer to permute the input into reverse-PyTorch dimension order
            [dropout_input_1, dropout_input_1_format] = mnasnet1_0.ops.permuteToReversePyTorch(dropout_input_1, '', 2);
            [dropout_input_1] = struct('value', dropout_input_1, 'rank', int64(2));

            [dropout_input0_1] = tracedPyTorchFunction(obj,dropout_input_1,true,"forward");


            %Permute U-labelled output to forward PyTorch dimension ordering
            if(any(dims(dropout_input0_1.value) == 'U'))
                dropout_input0_1 = permute(dropout_input0_1.value, fliplr(1:max(2,dropout_input0_1.rank)));
            end

        end



        function [dropout_input0_1] = tracedPyTorchFunction(obj,dropout_input_1,isForward,predict)

            [Constant_4] = mnasnet1_0.ops.makeStructForConstant(int64(obj.Constant_4), int64(0), "Typed");
            [Constant_3] = mnasnet1_0.ops.makeStructForConstant(single(obj.Constant_3), int64(0), "Typed");
            [dropout_input0_1] = mnasnet1_0.ops.pyDropout(dropout_input_1, Constant_3, isForward);
        end

    end
end

